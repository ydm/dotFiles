#!/bin/bash

ROOT=$(readlink -f $(dirname ${BASH_SOURCE[0]}))
COMMANDS=( config_alacritty
           config_bash
           config_emacs
           config_git
           config_sway
           config_sway_startup
           install_go_tools
           install_packages
           install_sway
           install_x )

out() { printf "$1 $2\n" "${@:3}"; }
error() { out "==> ERROR:" "$@"; } >&2
die() { error "$@"; exit 1; }

usage() {
    out "Usage: $0 <command>..."
    out
    out "Commands:"
    for c in ${COMMANDS[@]} ; do
        out '  ' $c
    done
}

config_alacritty() {
    rm -rf ~/.config/alacritty
    mkdir -p ~/.config/alacritty
    cp $ROOT/alacritty/alacritty.yml ~/.config/alacritty/
}

config_bash() {
    echo >> ~/.bashrc
    echo "source $ROOT/shell/aliases.sh" >> ~/.bashrc
    echo 'PATH=$PATH:~/dotFiles/wannabin' >> ~/.bashrc
}

config_git() {
    # TODO: This doesn't seem to work...
    git config --global user.email "jordanMiladinov@gmail.com"
    git config --global user.name "Yordan Miladinov"
    git config --global url.git@github.com:.insteadOf https://github.com/
}

config_emacs() {
    PATH="$ROOT"/emacs/y-init.el
    echo "(load \"$PATH\")" > ~/.emacs
}

config_git() {
    # Needed for go get to work
    git config --global url.git@github.com:.insteadOf https://github.com/
}

config_sway() {
    SWAY=$HOME/.config/sway

    # Make a backup
    if [ -d $SWAY ] ; then
        cp -r $SWAY $HOME/.config/sway.backup
    fi

    # Make sure ~/.config/sway exists.
    mkdir -p $SWAY

    # Copy example config.
    cp -f /etc/sway/config $SWAY/

    # Make it load additional config files.
    echo "include $HOME/.config/sway/*.conf" >> $SWAY/config

    # Copy additional config files.
    cp -t $SWAY $ROOT/sway/*.conf

    # TODO: Check ctrl:swapcaps
}

config_sway_startup() {
    cat >>~/.bash_profile <<EOF

if [[ -z \$DISPLAY ]] && [[ \$(tty) = /dev/tty1 ]]; then
    XKB_DEFAULT_LAYOUT=us exec sway
fi
EOF
}

install_go_tools() {

    go get -u github.com/rogpeppe/godef

}

install_packages() {

    # On new systems I absolutely need: dhcpcd, git, wpa_supplicant

    pacman -Sy --confirm \
           aspell-en \
           base-devel \
           clang \
           cmake \
           dhcpcd \
           emacs \
           firefox \
           gdb \
           git \
           gnu-free-fonts \
           go \
           man \
           man-pages \
           mg \
           openssh \
           pacman-contrib \
           pavucontrol \
           pkgconf \
           pulseaudio \
           sudo \
           the_silver_searcher \
           tmux \
           transmission-gtk \
           tree \
           ttf-cascadia-code \
           ttf-dejavu \
           ttf-hack \
           ttf-ubuntu-font-family \
           unzip \
           valgrind \
           vlc \
           wpa_supplicant \
           xclip \
           xorg-apps

    # Secondary packages
    pacman -Sy --confirm \
           postgresql-libs

}

install_sway() {

    pacman -Sy --confirm alacritty dmenu grim i3status mako slurp sway \
           swayidle swaylock wallutils waybar wayland xorg-xwayland

}

install_x() {
    pacman -Sy i3 xorg xorg-xclock xorg-xinit xterm
}

# TODO: AUR packages: ttf-monaco ttf-google-fonts-git ttf-courier-prime
# ttf-ms-fonts

if [ $# -eq 0 ] || [ $1 = "help" ] ; then
    usage
else
    for arg in $@ ; do
        if [[ "${COMMANDS[*]}" =~ "$arg" ]]; then
            $arg
        else
            die "unrecognized command: %s" "$arg"
        fi
    done
fi
