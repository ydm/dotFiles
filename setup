#!/bin/bash

ROOT=$(readlink -f $(dirname ${BASH_SOURCE[0]}))
COMMANDS=( config_alacritty
           config_bash
           config_emacs
           config_git
           config_sway
           config_sway_startup
           install_fasd
           install_go_tools
           install_packages
           install_sway
           install_x )

out() { printf "$1 $2\n" "${@:3}"; }
error() { out "==> ERROR:" "$@"; } >&2
die() { error "$@"; exit 1; }

usage() {
    out "Usage: $0 <command>..."
    out
    out "Commands:"
    for c in ${COMMANDS[@]} ; do
        out '  ' $c
    done
}

config_alacritty() {
    rm -rf ~/.config/alacritty
    mkdir -p ~/.config/alacritty
    cp $ROOT/alacritty/alacritty.yml ~/.config/alacritty/
}

config_bash() {
    cat >>~/.bashrc <<EOF

# ydm: config_bash
source $ROOT/shell/aliases.sh
PATH=\$PATH:$HOME/dotFiles/wannabin:$HOME/go/bin
EOF

}

config_emacs() {
    PATH="$ROOT"/emacs/y-init.el
    echo "(load \"$PATH\")" > ~/.emacs
}

config_git() {
    # TODO: This doesn't seem to work...
    git config --global pull.rebase true
    git config --global url.git@github.com:.insteadOf https://github.com/
    git config --global user.email "yordanm@pm.me"
    git config --global user.name "Yordan Miladinov"

    # Needed for go get to work.  Breaks up cargo tho, but who cares.
    git config --global url.git@github.com:.insteadOf https://github.com/
}

config_sway() {
    SWAY=$HOME/.config/sway

    # Make a backup
    if [ -d $SWAY ] ; then
        BACKUP=$HOME/.config/sway.backup
        rm -rf $BACKUP
        cp -r $SWAY $BACKUP
    fi

    # Make sure ~/.config/sway exists.
    mkdir -p $SWAY

    # Copy example config.
    cp -f /etc/sway/config $SWAY/

    # Make it load additional config files.
    echo "include $HOME/.config/sway/*.conf" >> $SWAY/config

    # Copy additional config files.
    cp -t $SWAY $ROOT/sway/*.conf

    # TODO: Check ctrl:swapcaps
}

config_sway_startup() {
    cat >>~/.bash_profile <<EOF

if [[ -z \$DISPLAY ]] && [[ \$(tty) = /dev/tty1 ]]; then
    XKB_DEFAULT_LAYOUT=us exec sway
fi
EOF
}

install_fasd() {

    sudo pacman -Sy --confirm fasd

    if [ $? -eq 0 ]  ; then
        cat >>~/.bashrc <<EOF

# install_fasd
eval "\$(fasd --init auto)"
EOF
    fi

}

install_go_tools() {

    go get -u github.com/dominikh/go-tools/cmd/staticcheck
    go get -u github.com/kisielk/errcheck
    go get -u github.com/rogpeppe/godef
    go get -u github.com/tetafro/godot/cmd/godot

    export GO111MODULE=on
    go get golang.org/x/tools/gopls@latest
}

install_packages() {

    # Some packages have to be installed during the installation
    # phase:
    #
    # $ pacstrap /mnt dhcpcd git sudo vi iwd
    #
    # TODO: iwd is an amazing tool, do I still need wpa_supplicant?
    # TODO: Split into categories: system, programming, etc.

    sudo pacman -Sy --noconfirm \
         aspell-en \
         base-devel \
         chromium \
         clang \
         cmake \
         delve \
         dhcpcd \
         emacs \
         firefox \
         gdb \
         git \
         gnu-free-fonts \
         go \
         iw \
         iwd \
         keepass \
         man \
         man-pages \
         mg \
         openssh \
         pacman-contrib \
         pavucontrol \
         pkgconf \
         pulseaudio \
         rustup \
         sudo \
         the_silver_searcher \
         tmux \
         transmission-gtk \
         tree \
         ttf-cascadia-code \
         ttf-dejavu \
         ttf-hack \
         ttf-ubuntu-font-family \
         unzip \
         valgrind \
         vlc \
         xclip \
         xorg-apps

    # Secondary packages
    sudo pacman -Sy --noconfirm \
         gimp \
         imagemagick \
         postgresql-libs

    xdg-settings set default-web-browser firefox.desktop

}

install_sway() {

    sudo pacman -Sy --confirm \
         alacritty \
         bemenu \
         brightnessctl \
         dmenu \
         foot \
         grim \
         i3status \
         mako \
         slurp \
         sway \
         swaybg \
         swayidle \
         swaylock \
         wallutils \
         waybar \
         wayland \
         xorg-xwayland

    # TODO: Install polkit?

    # These two are needed for the fancy swaybar status.sh.
    sudo pacman -Sy --confirm acpi noto-fonts-emoji

}

install_x() {
    sudo pacman -Sy --noconfirm i3 xorg xorg-xclock xorg-xinit xterm
}

# TODO: AUR packages: ttf-monaco ttf-google-fonts-git ttf-courier-prime
# ttf-ms-fonts

if [ $# -eq 0 ] || [ $1 = "help" ] ; then
    usage
else
    for arg in $@ ; do
        if [[ "${COMMANDS[*]}" =~ "$arg" ]]; then
            $arg
        else
            die "unrecognized command: %s" "$arg"
        fi
    done
fi
