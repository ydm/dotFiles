#!/bin/sh

ROOT=$(readlink -f $(dirname ${BASH_SOURCE[0]}))
COMMANDS=( config_alacritty
           config_bash
           config_emacs
           config_firefox
           config_git
           config_go
           config_misc
           config_rust
           config_sway
           install_packages
           install_rust
           install_sway
           install_tools
           install_x
         )

out() { printf "$1 $2\n" "${@:3}"; }
error() { out "==> ERROR:" "$@"; } >&2
die() { error "$@"; exit 1; }

usage() {
    out "Usage: $0 <command>..."
    out
    out "Commands:"
    for c in ${COMMANDS[@]} ; do
        out '  ' $c
    done
}

config_alacritty() {
    rm -rf ~/.config/alacritty
    mkdir -p ~/.config/alacritty
    cp $ROOT/alacritty/alacritty.yml ~/.config/alacritty/
}

config_bash() {
    cat >>~/.bashrc <<EOF

# BEGIN config_bash
source $ROOT/shell/aliases.sh
export PATH=\$PATH:$HOME/dotFiles/wannabin
export PATH=\$PATH:$HOME/go/bin
export PATH=\$PATH:$HOME/local/bin
# END config_bash
EOF

}

config_emacs() {
    PATH="$ROOT"/emacs/d-init.el
    echo "(load \"$PATH\")" > ~/.emacs
}

config_firefox() {
    python firefox.py
}

config_git() {
    git config --global pull.rebase true
    git config --global user.email "yordanm@pm.me"
    git config --global user.name "Yordan Miladinov"
}

config_go() {
    git config --global url.git@github.com:.insteadOf https://github.com/
}

config_rust() {
    git config --global --remove-section "url.git@github.com:"
}

config_misc() {
    # Configure:
    #   - direnv
    #   - fasd
    #
    # direnv: https://direnv.net/docs/hook.html

    cat >>~/.bashrc <<EOF

# BEGIN config_misc
eval "\$(fasd --init auto)"
eval "\$(direnv hook bash)"
# END config_misc
EOF
}

config_sway() {
    SWAY=$HOME/.config/sway

    # Make a backup
    if [ -d $SWAY ] ; then
        BACKUP=$HOME/.config/sway.backup
        rm -rf $BACKUP
        cp -r $SWAY $BACKUP
    fi

    # Make sure ~/.config/sway exists.
    mkdir -p $SWAY

    # Copy example config.
    cp -f /etc/sway/config $SWAY/

    # Make it load additional config files.
    echo "include $HOME/.config/sway/*.conf" >> $SWAY/config

    # Copy additional config files.
    cp -t $SWAY $ROOT/sway/*.conf

    # TODO: Check ctrl:swapcaps
}

install_packages() {

    # Some packages have to be installed during the installation
    # phase:
    #
    # $ pacstrap /mnt dhcpcd git sudo vi iwd

    # TODO: mkdir -p ~/.config

    # System
    #
    # Installs the xorg-apps gorup
    # https://archlinux.org/groups/x86_64/xorg-apps/
    sudo pacman -Sy --noconfirm --overwrite '*' \
         dhcpcd \
         direnv \
         iw \
         iwd \
         man \
         man-pages \
         openssh \
         pacman-contrib \
         pavucontrol \
         pulseaudio \
         sudo \
         tmux \
         ttf-cascadia-code \
         ttf-dejavu \
         ttf-hack \
         ttf-ubuntu-font-family \
         unzip \
         vlc \
         xclip \
         xorg-apps \
         xorg-xclock

    # Editors & fonts
    sudo pacman -Sy --noconfirm --overwrite '*' \
         aspell-en \
         emacs \
         gnu-free-fonts \
         mg \
         ripgrep \
         vi

    # Programming
    #
    # base-devel installs: binutils, gcc, gettext libtool pkgconf
    # https://archlinux.org/groups/x86_64/base-devel/
    sudo pacman -Sy --noconfirm --overwrite '*' \
         base-devel \
         clang \
         cmake \
         gdb \
         git \
         valgrind

    # Languages
    sudo pacman -Sy --noconfirm --overwrite '*' \
         delve \
         go \
         node \
         npm \
         rustup \
         yarn

    # Misc
    sudo pacman -Sy --noconfirm --overwrite '*' \
        fasd \
        imagemagick \
        keepass \
        postgresql-libs \
        tree

    # Misc GUI
    sudo pacman -Sy --noconfirm --overwrite '*' \
         chromium \
         firefox \
         gimp \
         transmission-gtk

    # NOTE: Since I'm installing both Chromium and Firefox, the
    # following line sets Firefox as the default browser.
    xdg-settings set default-web-browser firefox.desktop

}

install_rust() {

    # $ rustup default stable
    # info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'
    # info: latest update on 2023-03-28, rust version 1.68.2 (9eb3afe9e 2023-03-27)
    # info: downloading component 'cargo'     [+]
    # info: downloading component 'clippy'    [+]
    # info: downloading component 'rust-docs' [+]
    # info: downloading component 'rust-std'  [+]
    # info: downloading component 'rustc'     [+]
    # info: downloading component 'rustfmt'   [+]
    # info: installing component 'cargo'
    # info: installing component 'clippy'
    # info: installing component 'rust-docs'
    #  19.5 MiB /  19.5 MiB (100 %)  14.3 MiB/s in  1s ETA:  0s
    # info: installing component 'rust-std'
    #  29.9 MiB /  29.9 MiB (100 %)  22.5 MiB/s in  1s ETA:  0s
    # info: installing component 'rustc'
    #  68.1 MiB /  68.1 MiB (100 %)  25.5 MiB/s in  2s ETA:  0s
    # info: installing component 'rustfmt'
    #
    #   stable-x86_64-unknown-linux-gnu installed - rustc 1.68.2 (9eb3afe9e 2023-03-27)
    #
    # $

    # Here's a list of the components:
    # https://rust-lang.github.io/rustup/concepts/components.html
    #
    # Here's what's installed by default:
    # - cargo
    # - clippy
    # - rust-docs
    # - rust-stc
    # - rustc
    # - rustfmt
    #
    # Here's what's not installed:
    # - rust-analyzer
    # - rls
    # - miri
    # - rust-src
    # - rust-analysis
    # - rust-mingw
    # - llvm-tools-preview
    # - rust-dev
    #
    # Here's the list of all the valid proxy names for rustup:
    #   - rustc
    #   - rustdoc
    #   - cargo
    #   - rust-lldb
    #   - rust-gdb
    #   - rust-gdbgui
    #   - rls
    #   - cargo-clippy
    #   - clippy-driver
    #   - cargo-miri
    #   - rustfmt
    #   - cargo-fmt

    rustup default stable
    rustup toolchain install stable --component rust-analyzer rust-src rust-analysis

}

install_x() {
    sudo pacman -Sy --noconfirm --overwrite '*' \
         i3 \
         xorg \
         xorg-xinit \
         xterm
}

install_sway() {

    sudo pacman -Sy --confirm --overwrite '*' \
         alacritty \
         bemenu \
         brightnessctl \
         dmenu \
         foot \
         grim \
         i3status \
         mako \
         slurp \
         sway \
         swaybg \
         swayidle \
         swaylock \
         wallutils \
         waybar \
         wayland \
         xorg-xwayland

    # TODO: Install polkit?

    # These two are needed for the fancy swaybar status.sh.
    sudo pacman -Sy --noconfirm acpi noto-fonts-emoji

}

install_tools() {
    # Install gopls
    export GO111MODULE=on
    go install golang.org/x/tools/gopls@latest
    # TODO: Also install glangci-lint!

    # Install typescript-language-server.
    mkdir -p ~/local
    npm install --global --prefix ~/local typescript-language-server
}

# TODO: AUR packages: ttf-monaco ttf-google-fonts-git ttf-courier-prime
# ttf-ms-fonts

if [ $# -eq 0 ] || [ $1 = "help" ] ; then
    usage
else
    for arg in $@ ; do
        if [[ "${COMMANDS[*]}" =~ "$arg" ]]; then
            $arg
        else
            die "unrecognized command: %s" "$arg"
        fi
    done
fi
