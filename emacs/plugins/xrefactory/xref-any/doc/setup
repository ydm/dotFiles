#! /bin/sh
echo
echo "------            Xref installation script               ------ "
echo
echo "[warning] This script is obsolete, you should use the xrefsetup"
echo "script instead !!!!!!! "
echo
PPWD=`pwd`
PATH=${PATH}:${PPWD}
export PATH
if test ${SHELL} = "/bin/sh"
then
	XREF_TMP_SHRC_FILE=".profile"
	XREF_TMP_SHRC_COMM="export PATH=\${PATH}:${PPWD}"
elif test ${SHELL} = "/bin/bash"
then
	XREF_TMP_SHRC_FILE=".bashrc"
	XREF_TMP_SHRC_COMM="export PATH=\${PATH}:${PPWD}"
elif test ${SHELL} = "/bin/csh" -o ${SHELL} = "/bin/tcsh"
then
	XREF_TMP_SHRC_FILE=".cshrc"
	XREF_TMP_SHRC_COMM="setenv PATH \${PATH}:${PPWD}"
else
	echo "unknown shell, do not know how to update init files!!!!"
	echo "installation aborted, proceed it manually."
	exit
fi
SYSTEM_INSTALL="no"
#if test `id -u` = 0
#then
#	echo "You are running the setup script as super user."
#	echo "You can install Xref either into system directories or keep"
#	echo "them in the current directory. If you install it into system"
#	echo "directories Xref will be available for all users on the machine."
#	echo "On the other side this script will not run demo programs and"
#	echo "will not initalize your cross reference file. This option"
#	echo "is then recommended rather for experimented users."
#	echo
#	echo -n "Do you wish to install the Xref into system directories (y/n)? "
#	read aaa
#	if test ${aaa} = "y" -o ${aaa} = "Y"
#	then
#		sh ssetup
#		exit
#	fi
#fi
echo
echo "This Xref release is supporting the following editors:"
for d in *
do
	if test -d ${d}
	then
		echo -n "  " ${d}
	fi
done
echo
echo -n "Input one of them which is close to the editor you are using: "
read eee
if test ${eee} = "emacs" -o ${eee} = "emacs18" -o ${eee} = "emacs19" \
		-o ${eee} = "xemacs"
then
	if test ${eee} = "xemacs"
	then
		EDITOR=xemacs
	else
		EDITOR=emacs
	fi
#	cd ${eee}
#	sh init
#	cd ..
	EMLPATH="(setq load-path (append load-path '(\"${PPWD}/${EDITOR}\")))"
	EMLOAD="(load \"xrefactory.el\")"
	echo
	echo "If you have yet installed the Xref for this editor, you should"
	echo "answer  'n'  on  the following question,  otherwise you should"
	echo "answer  'y' in  order  to  load  Xref standard key-layout when"
	echo "starting the editor."
	echo
	echo "Can I append the text:"
	echo "  " ${EMLPATH} 
	echo "  " ${EMLOAD} 
	echo -n "to your ~/.emacs file (y/n)? "
	read aaa
	if test ${aaa} = "y" -o ${aaa} = "Y"
	then
		echo ";; Xrefactory configuration part ;;" >> ${HOME}/.emacs
		echo ${EMLPATH} >> ${HOME}/.emacs
		echo ${EMLOAD} >> ${HOME}/.emacs
		echo ";; end of Xrefactory configuration part ;;" >> ${HOME}/.emacs
	else
		echo
		echo "not appended"
	fi
	if test ${eee} != "emacs18"
	then
		EDITTEST=yes
	else
		EDITTEST=no
		echo
		echo "Please, read the" ${eee}/README "file to learn about"
		echo "standard key binding for this editor!!!!"
		echo
	fi
elif test ${eee} = "vedit3"
then
	cd ${eee}
	sh init
	cd ..
	cp  -f ${eee}/.vedit.key ${HOME}/.xrefvdt.key
	cp  -f ${eee}/.vedit.cfg ${HOME}/.xrefvdt.cfg
	if test -f ${HOME}/.veditrc
	then
		if diff ${HOME}/.veditrc ${eee}/.veditrc > /dev/null
		then
			echo ${HOME}/.veditrc does not need to be updated
		else
			echo saving old ${HOME}/.veditrc to ${HOME}/.veditrc.old
			mv ${HOME}/.veditrc ${HOME}/.veditrc.old
			cp -v ${eee}/.veditrc ${HOME}/.veditrc
		fi
	else 
		cp -v ${eee}/.veditrc ${HOME}/.veditrc
	fi
	EDITOR=vedit
	EDITTEST=yes
else
	echo
	echo "editor" ${eee} "not yet implemented in this Setup script, sorry"
	EDITOR=__none__
	EDITTEST=no
fi
echo
if test ${EDITTEST} = yes
then
	echo -n "Do you wish to check Xrefactory now, on a small C demo program (y/n)? "
	read aaa
	if test ${aaa} = "y" -o ${aaa} = "Y"
	then
		${EDITOR} test.c
		rm -f Xrefs
		echo "Done."
		echo
	fi
	echo
	echo -n "Do you wish to check Xrefactory now, on a small Java demo program (y/n)? "
	read aaa
	if test ${aaa} = "y" -o ${aaa} = "Y"
	then
		if test "$CLASSPATH" = ""
		then
			echo "Your CLASSPATH variable is not set, several examples will not"
			echo "work correctly.!!"
			sleep 2
		fi
		${EDITOR} Test.java
		rm -f Xrefs
		echo "Done."
		echo
	fi
fi
echo "If you have yet installed the Xref, you should answer 'n' on the"
echo "following question,  otherwise you should answer 'y' in order to"
echo "get the Xref distribution directory into your PATH variable."
echo
echo "Can I append the line:" 
echo "    " \"${XREF_TMP_SHRC_COMM}\" 
echo -n "to your ~/"${XREF_TMP_SHRC_FILE} "file (y/n)? "
read aaa
if test ${aaa} = "y" -o ${aaa} = "Y"
then
	echo "## Xrefactory configuration part ##" >> ${HOME}/${XREF_TMP_SHRC_FILE}
	echo "${XREF_TMP_SHRC_COMM}" >> ${HOME}/${XREF_TMP_SHRC_FILE}
	echo "## end of Xrefactory configuration part ##" >> ${HOME}/${XREF_TMP_SHRC_FILE}
else
	echo
	echo "not appended"
fi
echo
echo "In order to make Xref works for your sources, you have to "
echo "create a file containing Xref's command line options."
echo "Then you have to run Xref and create file containing cross"
echo "references of your project. You can do all this by continuing"
echo "this script now."
echo
echo -n "Do you wish to continue the instalation (y/n)? "
read aaa
if test ${aaa} = "y" -o ${aaa} = "Y"
then
	echo
	echo "Enter the name of the directory containing all sources of your "
	echo "project (directly or in some subdirectories). If all your sources"
	echo "are in one directory, just enter its name."
	echo -n "Enter directory name: "
	while
		read SOURCEDIR
		if test X${SOURCEDIR} = X
		then
			exit
		fi
		test ! -d ${SOURCEDIR}
	do
		echo ${SOURCEDIR} "is not a valid directory name. Please enter one"
		echo "or <Enter> to leave this script."
		echo -n "Enter directory name: "
	done
	echo
	echo "Now creating the '.xrefrc' file in your home directory"
	echo "This file will contain your personal options passed to"
	echo "Xref on each invocation."
	echo
	XX_CREATE="no"
	if test -f ${HOME}/.xrefrc
	then
		echo -n "The file '${HOME}/.xrefrc' exists, can I overwrite it (y/n)? "
		read aaa
		if test ${aaa} = "y" -o ${aaa} = "Y"
		then
			rm ${HOME}/.xrefrc
			XX_CREATE="yes"
		fi
	else
		XX_CREATE="yes"
	fi
	cd ${SOURCEDIR}
	if test X${NODE} = X
	then 
		SSWD=`pwd`
	else
		SSWD=//${NODE}`pwd`
	fi
	if test ${XX_CREATE} = "yes"
	then
		sed -e s\|__SECTION__\|${SSWD}\|g -e s\|__HOME__\|${HOME}\|g \
			${PPWD}/.xrefrc > ${HOME}/.xrefrc
	fi
	echo
	echo "If you compile your sources with command line options, such"
	echo "as '-D' or '-I', you should now edit the '.xrefrc' file and"
	echo "insert here those options."
	echo
	echo -n "Do you wish to edit the '.xrefrc' file (y/n)? "
	read aaa
	if test ${aaa} = "y" -o ${aaa} = "Y"
	then
		cd ${HOME}
		${EDITOR} .xrefrc
		cd ${SSWD}
		echo "Done."
		echo
	fi
	echo
	echo "Now, we can proceed to the creation of the cross reference"
	echo "file. It will contain the list of all global symbols of your"
	echo "program as well as all its references. This script will now"
	echo "look for files under '" ${SSWD} "' directory and proceed all"
	echo "having the '.c' and '.java' suffixes."
	echo
	echo -n "Can I do this (y/n)? "
	read aaa
	if test ${aaa} = "y" -o ${aaa} = "Y"
	then
		xref `find . \( -name "*.c" -o -name "*.java" \) -print`
		echo
		echo "Done. If you see some error messages, read the 'TROUBLES'"
		echo "section of the '../xref/README' file. "
		echo "In the future, You can update the cross reference file"
		echo "directly from Emacs/XEmacs by typing 'M-x xref-update-refs' command,"
		echo "or by selecting the 'Update Cross Reference File'"
		echo "item from Xref's menu bar. To insert a new file, you can simply"
		echo "update cross references when editing this new file. To delete"
		echo "a file, you can simple delete it in your source directory and"
		echo "then update cross references. To modify the standard key-layout"
		echo "read the README file in the editor's subdirectory."
		echo "If you like Xref and you are super-user, you can install Xref"
		echo "into system directories by running 'sh ssetup' script."
	fi
	cd ${PPWD}
fi
echo
echo "The Installation is over!"
echo "Do not forget to restart your editor in order to use Xref."
echo
echo "Enjoy,"
echo "    Marian"
echo
